name: Deploy to EC2

on:
  push:
    branches:
      - main # Deploy to production on push to main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_USER_POOL_ID: ${{ secrets.NEXT_PUBLIC_USER_POOL_ID }}
      NEXT_PUBLIC_USER_POOL_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_USER_POOL_CLIENT_ID }}
      NEXT_PUBLIC_IDENTITY_POOL_ID: ${{ secrets.NEXT_PUBLIC_IDENTITY_POOL_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug Environment Variables
        run: |
          echo "NEXT_PUBLIC_USER_POOL_ID: $NEXT_PUBLIC_USER_POOL_ID"
          echo "NEXT_PUBLIC_USER_POOL_CLIENT_ID: $NEXT_PUBLIC_USER_POOL_CLIENT_ID"
          echo "NEXT_PUBLIC_IDENTITY_POOL_ID: $NEXT_PUBLIC_IDENTITY_POOL_ID"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Debug EC2_KEY # Optional: For debugging purposes
        run: |
          echo "EC2_KEY content: ${{ secrets.EC2_KEY }}"

      - name: Create SSH directory
        run: mkdir -p $HOME/.ssh

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 -d > $HOME/.ssh/id_rsa
          chmod 600 $HOME/.ssh/id_rsa

      - name: Add SSH key to the agent
        run: |
          eval $(ssh-agent)
          ssh-add $HOME/.ssh/id_rsa

      - name: Debug EC2_PUBLIC_IP
        run: |
          echo "EC2_PUBLIC_IP: ${EC2_PUBLIC_IP}"

      - name: Add SSH known hosts
        run: |
          ssh-keyscan -H 3.84.33.88 >> $HOME/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ec2-user@3.84.33.88 << 'EOF'
            cd ./my-pet
            mv .env.local .env.local.backup || true
            echo "NEXT_PUBLIC_USER_POOL_ID=${NEXT_PUBLIC_USER_POOL_ID}" >> .env.local
            echo "NEXT_PUBLIC_USER_POOL_CLIENT_ID=${NEXT_PUBLIC_USER_POOL_CLIENT_ID}" >> .env.local
            echo "NEXT_PUBLIC_IDENTITY_POOL_ID=${NEXT_PUBLIC_IDENTITY_POOL_ID}" >> .env.local
            cat .env.local
            git pull
            npm install
            npm run build
            pm2 restart my-pet
          EOF
